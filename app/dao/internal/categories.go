// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// CategoriesDao is the manager for logic model data accessing and custom defined data operations functions management.
type CategoriesDao struct {
	gmvc.M                   // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      categoriesColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB            // DB is the raw underlying database management object.
	Table  string            // Table is the underlying table name of the DAO.
}

// CategoriesColumns defines and stores column names for table categories.
type categoriesColumns struct {
	Id           string //
	CategoryName string // 类别名称
	CreatedAt    string //
	UpdatedAt    string //
}

// NewCategoriesDao creates and returns a new DAO object for table data access.
func NewCategoriesDao() *CategoriesDao {
	columns := categoriesColumns{
		Id:           "id",
		CategoryName: "category_name",
		CreatedAt:    "created_at",
		UpdatedAt:    "updated_at",
	}
	return &CategoriesDao{
		C:     columns,
		M:     g.DB("default").Model("categories").Safe(),
		DB:    g.DB("default"),
		Table: "categories",
	}
}
