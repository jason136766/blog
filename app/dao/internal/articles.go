// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ArticlesDao is the manager for logic model data accessing and custom defined data operations functions management.
type ArticlesDao struct {
	gmvc.M                 // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      articlesColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB          // DB is the raw underlying database management object.
	Table  string          // Table is the underlying table name of the DAO.
}

// ArticlesColumns defines and stores column names for table articles.
type articlesColumns struct {
	Id         string //
	CategoryId string // 类别ID
	Title      string // 标题
	Content    string // 内容
	CreatedAt  string //
	UpdatedAt  string //
}

// NewArticlesDao creates and returns a new DAO object for table data access.
func NewArticlesDao() *ArticlesDao {
	columns := articlesColumns{
		Id:         "id",
		CategoryId: "category_id",
		Title:      "title",
		Content:    "content",
		CreatedAt:  "created_at",
		UpdatedAt:  "updated_at",
	}
	return &ArticlesDao{
		C:     columns,
		M:     g.DB("default").Model("articles").Safe(),
		DB:    g.DB("default"),
		Table: "articles",
	}
}
